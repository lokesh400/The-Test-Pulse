<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Announcement</title>
    <link rel="stylesheet" href="/styles/login.css">
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }
        #layer2 {
            height: 80%;
            width: 100%;
            background-color: aqua;
        }
        .form {
            display: flex;
            flex-direction: column;
            border: 2px solid whitesmoke;
            width: 500px;
            background-color: #ffffff;
            border-radius: 5px;
            margin: auto;
            padding: 20px;
            position: relative;
            z-index: 1001; /* Ensure it appears above the overlay */
        }
        p {
            text-align: center;
            color: black;
            font-size: 20px;
            margin: 5px 0;
        }
        .btn {
            margin: 20px 0 10px 0;
            background-color: #151717;
            border: none;
            color: white;
            font-size: 15px;
            font-weight: 500;
            border-radius: 10px;
            height: 50px;
            width: 100%;
            cursor: pointer;
        }
        #myForm {
            display: none; /* Initially hidden */
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
            z-index: 1000; /* Ensure it appears above the overlay */
        }
        #overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
            display: none; /* Hidden by default */
            z-index: 999; /* Just below the form */
        }
        #announcements {
            display: none; /* Initially hidden */
        }
        #tests {
            display: block; /* Initially visible */
        }
        #announcement-list {
           list-style-type: none; /* Remove default bullet points */
           padding: 0; /* Remove padding */
           margin: 0; /* Remove margin */
        }

        #announcement-list li {
            background-color: #f9f9f9; /* Light background for each list item */
            border: 1px solid #ddd; /* Border around each item */
            border-radius: 4px; /* Rounded corners */
            padding: 10px; /* Spacing inside each item */
            margin: 5px auto;
            width: 500px;
            transition: background-color 0.3s; /* Smooth transition for hover effect */
        }

        #announcement-list li:hover {
            background-color: #e1f5fe; /* Change background on hover */
            cursor: pointer; /* Change cursor to pointer */
        }
        
        .button {
            padding: 5px;
            border-bottom-left-radius: 5px;
            border-bottom-right-radius: 5px;
            border: none;
            background-color: #151717;
            color: #ffffff;
        }
        #heading{
            display: flex;
            margin-top: 0px;
            height: 100px;
            justify-content: center;
            align-items: center;
            background-color: rgba(55, 0, 255, 0.695);
        }

        #buttons{
            display: flex;
            justify-content: center;
            gap: 2px;
            height: 10p;
        }  
        
        a{
            color: #ffffff;
            text-decoration: none;
        }

        h2{
            text-align: center;
        }

        @media (max-width: 450px) {
            .form {
                width: 90%;
            }

            
        #announcement-list li {
             margin: 5px auto;
            width: 90%;
            transition: background-color 0.3s; /* Smooth transition for hover effect */
            }  

        }

    </style>
</head>
<body>

    <div id="heading">
        <h2><%=thisBatch.title%></h2>
    </div>

    <div id="buttons">
        <button id="announcements-button" class="button">Announcements</button>
        <button id="tests-button" class="button">Show Tests</button>
        <button class="button"><a href="/update-batch/<%=thisBatch._id%>">Update</a></button>
        
        <button id="toggleButton" class="button">Add Announcement</button>
    </div>

    <div id="announcements">
        <h2>Announcements</h2>
        <ul id="announcement-list"></ul>
    </div>

    <div id="outer-div">
        
            <div id="tests">
                <h2>All Tests</h2>
                <div class="form">
                    <% if (thisBatch && thisBatch.tests && thisBatch.tests.length > 0) { %>
                        <% for (let i = 0; i < thisBatch.tests.length; i++) { %>
                        <p><%= thisBatch.title %></p>
                        <div class="card-button">
                            <a href="/student/test/<%= thisBatch.tests[i] %>">
                                <button class="btn">Attempt Test <%= thisBatch.tests[i] %></button>
                            </a>   
                        </div>
                        <% } %>
                    <% } else { %>
                        <p>No tests available.</p>
                    <% } %>
            </div>

            <div id="overlay"></div>
            <div id="myForm">
                <h2>Create New Announcement</h2>
                <form action="/create/new/announcement/<%=thisBatch._id%>" method="POST">
                    <div class="flex-column">
                        <label>Title</label>
                    </div>
                    <div class="inputForm">
                        <input placeholder="Enter New Announcement" name="text" class="input" type="text" required />
                    </div>
                    <button type="submit" class="button-submit">Create Announcement</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        const batchId = '<%= thisBatch ? thisBatch._id : "defaultBatchId" %>'; // Ensure thisBatch is defined
    
        document.getElementById('announcements-button').addEventListener('click', async () => {
            document.getElementById('tests').style.display = 'none';
            document.getElementById('announcements').style.display = 'block';
            console.log(batchId); // Check if batchId is being set correctly
    
            try {
                console.log(`Fetching announcements for batch ID: ${batchId}`);
                const response = await fetch(`/batch/${batchId}/announcements`); // Correct URL
                if (!response.ok) {
                    console.error('Network response was not ok:', response.statusText);
                    return;
                }
                const announcements = await response.json();
    
                console.log('Announcements fetched:', announcements);
    
                const announcementList = document.getElementById('announcement-list');
                announcementList.innerHTML = ''; // Clear previous announcements
    
                if (announcements.length === 0) {
                    announcementList.innerHTML = '<li>No announcements available.</li>';
                } else {
                    announcements.forEach(announcement => {
                        const li = document.createElement('li');
                        li.textContent = announcement;
                        announcementList.appendChild(li);
                    });
                }
            } catch (error) {
                console.error('Error fetching announcements:', error);
            }
        });

        document.getElementById('tests-button').addEventListener('click', () => {
            document.getElementById('announcements').style.display = 'none';
            document.getElementById('tests').style.display = 'block';
        });

        const toggleButton = document.getElementById('toggleButton');
        const myForm = document.getElementById('myForm');
        const overlay = document.getElementById('overlay');

        toggleButton.addEventListener('click', () => {
            if (myForm.style.display === 'none' || myForm.style.display === '') {
                myForm.style.display = 'block';
                overlay.style.display = 'block';
                toggleButton.textContent = 'Hide Form';
            } else {
                myForm.style.display = 'none';
                overlay.style.display = 'none';
                toggleButton.textContent = 'Show Form';
            }
        });
    </script>
</body>
</html>
