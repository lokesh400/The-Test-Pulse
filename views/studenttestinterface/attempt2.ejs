<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Attempt Test - JEE Interface</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    /* General Layout */
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      display: flex;
      height: 100vh;
      overflow: hidden;
    }

    /* Sidebar */
    .sidebar {
      width: 250px;
      background-color: #003366;
      color: #ffffff;
      padding: 20px;
      box-shadow: 2px 0 8px rgba(0, 0, 0, 0.2);
      display: flex;
      flex-direction: column;
      justify-content: start;
    }

    .sidebar h5 {
      font-size: 18px;
      margin-bottom: 20px;
      text-align: center;
    }

    #counters {
      text-align: left;
      margin-bottom: 20px;
    }

    #counters p {
      font-size: 16px;
      margin: 10px 0;
    }

    #questionList {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
    }

    .sidebar-button {
      width: 40px;
      height: 40px;
      font-size: 16px;
      background: #f1f1f1;
      color: #333;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.3s;
    }

    .sidebar-button.answered {
      background: #4caf50;
      color: #fff;
    }

    .sidebar-button.skipped {
      background: #ff9800;
      color: #fff;
    }

    /* Main Test Content */
    .content {
      flex-grow: 1;
      padding: 20px;
      overflow-y: auto;
      display: none;
    }

    .title {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: #f1f1f1;
      padding: 10px 20px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      border-radius: 8px;
      margin-bottom: 20px;
    }

    .title h3 {
      margin: 0;
      font-size: 24px;
      color: #333;
    }

    .question-block {
      background: #fff;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      display: none; /* Hide all questions initially */
    }

    .question-block.active {
      display: block; /* Display only the current question */
    }

    .radio-input {
      margin: 8px 0;
      display: flex;
      align-items: center;
    }

    .radio-input input {
      margin-right: 10px;
    }

    .footer {
      display: flex;
      justify-content: space-between;
      gap: 10px;
    }

    .btn {
      padding: 10px 15px;
      font-size: 16px;
      cursor: pointer;
      border: none;
      border-radius: 5px;
      color: #fff;
      transition: background-color 0.3s;
    }

    /* Button Colors */
    .btn.save-next {
      background-color: #4caf50;
    }

    .btn.skip {
      background-color: #ff9800;
    }

    .btn.clear {
      background-color: #d32f2f;
    }

    .btn.submit {
      background-color: #2196f3;
    }
  </style>
</head>
<body>

  <button id="clickToStart">Click here to start the test in fullscreen</button>

  <div class="sidebar" id="side" style="display: none;">
    <h5 id="timeRemaining"><%= test.duration %></h5>
    <div id="counters">
      <p>Attempted: <span id="attemptedCount">0</span></p>
      <p>Skipped: <span id="skippedCount">0</span></p>
      <p>Not Attempted: <span id="notAttemptedCount"><%= test.questions.length %></span></p>
    </div>
    <div id="questionList">
      <% test.questions.forEach((question, index) => { %>
        <button type="button" class="sidebar-button" id="sidebar-button-<%= index %>" onclick="showQuestion(<%= index %>)"><%= index + 1 %></button>
      <% }) %>
    </div>
  </div>

  <div class="content" id="testContent">
    <div class="title">
      <h3><%= test.title %></h3>
      <button class="btn submit" type="button" onclick="submitTest()">Submit</button>
    </div>

    <form id="testForm" action="/student/test/<%= test._id %>" method="POST">
      <% test.questions.forEach((question, index) => { %>
        <div class="question-block" id="question-<%= index %>">
          <h3>Question <%= index + 1 %>:</h3> 
          <img id="ques-img" src="<%= question.questionText %>" alt="">
          <div>
            <% question.options.forEach((option, optionIndex) => { %>
              <div class="radio-input">
                <input type="radio" name="answers[<%= index %>]" value="<%= optionIndex %>">
                <label><%= option %></label>
              </div>
            <% }) %>
          </div>
          <footer class="footer">
            <button type="button" class="btn save-next" onclick="saveAndNext(<%= index %>)">Save & Next</button>
            <button type="button" class="btn skip" onclick="skipQuestion(<%= index %>)">Skip</button>
            <button type="button" class="btn clear" onclick="clearSelection(<%= index %>)">Clear Selection</button>
          </footer>
        </div>
      <% }) %>
    </form>
  </div>

  <script>
    let totalTime = <%= test.time %> * 60;
    let timerInterval;
    let attemptedCount = 0;
    let skippedCount = 0;
    let notAttemptedCount = <%= test.questions.length %>;
  
    function updateCounters() {
      document.getElementById('attemptedCount').textContent = attemptedCount;
      document.getElementById('skippedCount').textContent = skippedCount;
      document.getElementById('notAttemptedCount').textContent = notAttemptedCount;
    }
  
    function startTimer() {
      timerInterval = setInterval(() => {
        if (totalTime <= 0) {
          clearInterval(timerInterval);
          document.getElementById('testForm').submit();
          alert('Time is up! Your test has been submitted.');
        } else {
          totalTime--;
          const minutes = Math.floor(totalTime / 60);
          const seconds = totalTime % 60;
          document.getElementById('timeRemaining').textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
        }
      }, 1000);
    }
  
    function showQuestion(index) {
      hideAllQuestions();
      document.getElementById(`question-${index}`).classList.add('active');
    }
  
    function hideAllQuestions() {
      document.querySelectorAll('.question-block').forEach(question => question.classList.remove('active'));
    }
  
    function saveAndNext(index) {
      const selectedOption = document.querySelector(`input[name="answers[${index}]"]:checked`);
      const sidebarButton = document.getElementById(`sidebar-button-${index}`);
  
      // If an option is selected
      if (selectedOption) {
        // Mark question as answered
        if (!sidebarButton.classList.contains('answered')) {
          attemptedCount++;
          notAttemptedCount--;
        }
        sidebarButton.classList.remove('skipped');
        sidebarButton.classList.add('answered');
        updateCounters();
      } else {
        // No option selected, treat as skipped
        if (!sidebarButton.classList.contains('skipped')) {
          skippedCount++;
          notAttemptedCount--;
        }
        sidebarButton.classList.remove('answered');
        sidebarButton.classList.add('skipped');
        updateCounters();
      }
  
      // Move to the next question or submit if this was the last question
      if (index + 1 < <%= test.questions.length %>) {
        showQuestion(index + 1);
      } else {
        alert('This was the last question! The test will be submitted.');
        document.getElementById('testForm').submit();
      }
    }
  
    function skipQuestion(index) {
      const sidebarButton = document.getElementById(`sidebar-button-${index}`);
      if (!sidebarButton.classList.contains('skipped')) {
        skippedCount++;
        notAttemptedCount--;
      }
      sidebarButton.classList.remove('answered');
      sidebarButton.classList.add('skipped');
      updateCounters();
  
      if (index + 1 < <%= test.questions.length %>) {
        showQuestion(index + 1);
      } else {
        alert('This was the last question! The test will be submitted.');
        document.getElementById('testForm').submit();
      }
    }
  
    function clearSelection(index) {
      document.querySelectorAll(`input[name="answers[${index}]"]`).forEach(radio => (radio.checked = false));
      const sidebarButton = document.getElementById(`sidebar-button-${index}`);
      if (sidebarButton.classList.contains('answered')) {
        attemptedCount--;
        notAttemptedCount++;
      } else if (sidebarButton.classList.contains('skipped')) {
        skippedCount--;
        notAttemptedCount++;
      }
      sidebarButton.classList.remove('answered');
      sidebarButton.classList.remove('skipped');
      updateCounters();
    }
  
    function submitTest() {
      const unansweredQuestions = <%= test.questions.length %> - attemptedCount - skippedCount;
      if (unansweredQuestions > 0) {
        alert(`Please answer all questions before submitting. You have ${unansweredQuestions} unanswered questions.`);
      } else {
        document.getElementById('testForm').submit();
      }
    }
  
    document.getElementById("clickToStart").addEventListener("click", function() {
      enterFullscreen();
      startTimer();
      document.getElementById("clickToStart").style.display = "none";
      document.getElementById("testContent").style.display = "block";
      document.getElementById("side").style.display = "block";
    });
  
    function enterFullscreen() {
      const elem = document.documentElement;
      if (elem.requestFullscreen) elem.requestFullscreen();
      else if (elem.mozRequestFullScreen) elem.mozRequestFullScreen();
      else if (elem.webkitRequestFullscreen) elem.webkitRequestFullscreen();
      else if (elem.msRequestFullscreen) elem.msRequestFullscreen();
    }
  
    document.addEventListener("fullscreenchange", function() {
      if (!document.fullscreenElement) {
        alert("Fullscreen mode was exited. Submitting the test.");
        document.getElementById('testForm').submit();
      }
    });
  
    showQuestion(0);
  </script>
  
     
</body>
</html>
