<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Attempt Test</title>
  <link rel="stylesheet" href="/styles/studenttest.css">
</head>
<body>

  <button id="clickToStart">Click here to start the test in fullscreen</button>

  <div class="content" id="testContent" style="display: none;">

    <div class="title">
        <div id="heading">
            <h3><%= test.title %></h3>
        </div>
        <button class="btn" type="button" onclick="Submit()">Submit</button>
    </div>


    <form id="testForm" action="/student/test/<%= test._id %>" method="POST">
      <% test.questions.forEach((question, index) => { %>
        <div class="question-block" id="question-<%= index %>">
            
          <h3>Question <%= index + 1 %>:</h3> <img id="ques-img" src="<%= question.questionText %>" alt="">
          <div>
          <% question.options.forEach((option, optionIndex) => { %>

            <div class="radio-input">
              <label class="label">
                <input
                type="radio"
                name="answers[<%= index %>]" 
                value="<%= optionIndex %>"
                />
                <p class="text"><%= option %></p>
              </label>
            </div>
           <br>
          <% }) %>
        </div>
        <!-- Buttons for Save & Next, Skip, and Clear Selection -->
        <footer class="footer">
            <button type="button" class="btn" onclick="saveAndNext(<%= index %>)">Save & Next</button>
            <button type="button" class="btn" onclick="skipQuestion(<%= index %>)">Skip</button>
            <button type="button" class="btn" onclick="clearSelection(<%= index %>)">Clear Selection</button>
        </footer>
            
        </div>
      <% }) %>
      <input type="hidden" name="currentQuestionIndex" id="currentQuestionIndex" value="0">
    </form>
  </div>

  <div class="sidebar">

    <div>
        <h5 id="timeRemaining"><%= test.duration %></h5>
    </div>
        <!-- Counters Display -->
    <div id="counters">
        <p>Attempted:<span id="attemptedCount">0</span></p>
        <p>Skipped: <span id="skippedCount">0</span></p>
        <p>Not Attempted: <span id="notAttemptedCount"><%= test.questions.length %></span></p>
      </div>

    <div id="questionList">
      <% test.questions.forEach((question, index) => { %>
          <button type="button" class="sidebar-button" id="sidebar-button-<%= index %>" onclick="showQuestion(<%= index %>)"><%= index + 1 %></button>
      <% }) %>
    </div>
  </div>

  <script>
    let totalTime = <%= test.time %> * 60;
    let timerInterval;
    let attemptedCount = 0;
    let skippedCount = 0;
    let notAttemptedCount = <%= test.questions.length %>;

    function updateCounters() {
        document.getElementById('attemptedCount').textContent = attemptedCount;
        document.getElementById('skippedCount').textContent = skippedCount;
        document.getElementById('notAttemptedCount').textContent = notAttemptedCount;
    }

    function startTimer() {
        timerInterval = setInterval(() => {
            if (totalTime <= 0) {
                clearInterval(timerInterval);
                document.getElementById('testForm').submit();
                alert('Time is up! Your test has been submitted.');
            } else {
                totalTime--;
                const minutes = Math.floor(totalTime / 60);
                const seconds = totalTime % 60;
                document.getElementById('timeRemaining').textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
            }
        }, 1000);
    }

    function showQuestion(index) {
        hideAllQuestions();
        document.getElementById(`question-${index}`).classList.add('active');
    }

    function hideAllQuestions() {
        const allQuestions = document.querySelectorAll('.question-block');
        allQuestions.forEach(question => question.classList.remove('active'));
    }

    function saveAndNext(index) {
        const selectedOption = document.querySelector(`input[name="answers[${index}]"]:checked`);
        if (selectedOption) {
            const sidebarButton = document.getElementById(`sidebar-button-${index}`);
            if (!sidebarButton.classList.contains('answered')) {
                attemptedCount++;
                notAttemptedCount--;
            }
            sidebarButton.classList.remove('skipped');
            sidebarButton.classList.add('answered');
            updateCounters();

            if (index + 1 < <%= test.questions.length %>) {
                showQuestion(index + 1);
            } else {
                alert('This was the last question!');
                clearInterval(timerInterval);
            }
        } else {
            alert('Please select an option before saving.');
        }
    }

    function skipQuestion(index) {
        const sidebarButton = document.getElementById(`sidebar-button-${index}`);
        if (!sidebarButton.classList.contains('skipped')) {
            skippedCount++;
            notAttemptedCount--;
        }
        sidebarButton.classList.remove('answered');
        sidebarButton.classList.add('skipped');
        updateCounters();

        if (index + 1 < <%= test.questions.length %>) {
            showQuestion(index + 1);
        } else {
            alert('This was the last question!');
            clearInterval(timerInterval);
        }
    }

    function clearSelection(index) {
        const radioButtons = document.querySelectorAll(`input[name="answers[${index}]"]`);
        radioButtons.forEach(radio => radio.checked = false);

        const sidebarButton = document.getElementById(`sidebar-button-${index}`);
        if (sidebarButton.classList.contains('answered')) {
            attemptedCount--;
            notAttemptedCount++;
        } else if (sidebarButton.classList.contains('skipped')) {
            skippedCount--;
            notAttemptedCount++;
        }
        sidebarButton.classList.remove('answered');
        sidebarButton.classList.remove('skipped');
        updateCounters();
    }

    function Submit() {
        document.getElementById('testForm').submit();
    }

    showQuestion(0);

    // Fullscreen and timer setup
    document.getElementById("clickToStart").addEventListener("click", function() {
        enterFullscreen();
        startTimer();
        document.getElementById("clickToStart").style.display = "none";
        document.getElementById("testContent").style.display = "block";
    });

    function enterFullscreen() {
        const elem = document.documentElement;
        if (elem.requestFullscreen) {
            elem.requestFullscreen();
        } else if (elem.mozRequestFullScreen) { // Firefox
            elem.mozRequestFullScreen();
        } else if (elem.webkitRequestFullscreen) { // Chrome, Safari and Opera
            elem.webkitRequestFullscreen();
        } else if (elem.msRequestFullscreen) { // IE/Edge
            elem.msRequestFullscreen();
        }
    }

    // Monitor fullscreen exit
    document.addEventListener("fullscreenchange", function() {
        if (!document.fullscreenElement) {
            alert("Fullscreen mode was exited. Submitting the test.");
            document.getElementById('testForm').submit();
        }
    });
  </script>
</body>
</html>
