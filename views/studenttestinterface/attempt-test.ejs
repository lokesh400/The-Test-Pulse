<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Attempt Test</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="/styles/studentTestInterface.css">
</head>
<body>

  <div id="clickToStartDiv">
    <section id="heading-div-main">
      <h3><%= test.title %></h3>
    </section>
    <button id="clickToStart">Start Test</button>
  </div>
  

  <div class="sidebar" id="side" style="display: none; overflow-y: auto;">
    <div class="hamburger" id="toggleSidebarMain" onclick="toggleSidebar()">
        <span class="line"></span>
        <span class="line"></span>
        <span class="line"></span>
    </div>
    <h5 id="timeRemaining"><%= test.duration %></h5>
    <div id="counters">
      <p>Attempted: <span id="attemptedCount">0</span></p>
      <p>Skipped: <span id="skippedCount">0</span></p>
      <p>Not Attempted: <span id="notAttemptedCount"><%= test.questions.length %></span></p>
    </div>
    <div id="questionList">
      <% test.questions.forEach((question, index) => { %>
        <button type="button" class="sidebar-button" id="sidebar-button-<%= index %>" onclick="showQuestion(<%= index %>)"><%= index + 1 %></button>
      <% }) %>
    </div>
  </div>

  <div class="content" id="testContent">
    <div class="title">
      <h3><%= test.title %></h3>
      <button class="btn submit" type="button" onclick="submitTest()">Submit</button>
      <div class="hamburger" id="toggleSidebarMain" onclick="toggleSidebar()">
        <span class="line"></span>
        <span class="line"></span>
        <span class="line"></span>
    </div>
    </div>

    <form id="testForm" action="/student/test/<%= test._id %>" method="POST">
      <% test.questions.forEach((question, index) => { %>
        <div class="question-block" id="question-<%= index %>" data-value="<%= question._id %>">
          <div id="questiontype-<%= index %>"  style="display: none;" data-value="<%= question.questionType %>" ></div>
          <h3>Question <%= index + 1 %>:</h3>
          <img id="ques-img" src="<%= question.questionText %>" alt="">
          <input type="hidden" name="questionType[<%= index %>]" value="<%= question.questionType %>"> <!-- Add this line -->
          <div>
            <% if (question.questionType === 'mcq') { %>
              <% question.options.forEach((option, optionIndex) => { %>
                <div class="radio-input">
                  <input type="radio" id="option1" name="answers[<%= index %>]" value="<%= optionIndex %>">
                  <div class="radio-option" data-value="<%= optionIndex %>">
                    <label for="option1"><%= option %></label>
                  </div>
                </div>
                
              <% }) %>
            <% } else if (question.questionType === 'numerical') { %>
              <div class="numerical-input">
                <input id="numerical-ipt" type="number" name="answers[<%= index %>]" placeholder="Enter number" />
              </div>
            <% } %>
          </div>
          <footer class="footer">
            <button type="button" class="btn save-next" onclick="saveAndNext(<%= index %>)">Save & Next</button>
            <button type="button" class="btn clear" onclick="clearSelection(<%= index %>)">Clear Selection</button>
          </footer>
        </div>
      <% }) %>
    </form>
    
  </div>

  <script>


    //  const inputField = document.getElementById('numerical-ipt');
    //  inputField.addEventListener('input', (event) => {  
    //  inputField.value = event.target.placeholder;
    // });


    let totalTime = <%= test.time %> * 60;
    let timerInterval;
    let attemptedCount = 0;
    let skippedCount = 0;
    let notAttemptedCount = <%= test.questions.length %>;
  
    function updateCounters() {
      document.getElementById('attemptedCount').textContent = attemptedCount;
      document.getElementById('skippedCount').textContent = skippedCount;
      document.getElementById('notAttemptedCount').textContent = notAttemptedCount;
    }
  
    function startTimer() {
      timerInterval = setInterval(() => {
        if (totalTime <= 0) {
          clearInterval(timerInterval);
          document.getElementById('testForm').submit();
          alert('Time is up! Your test has been submitted.');
        } else {
          totalTime--;
          const minutes = Math.floor(totalTime / 60);
          const seconds = totalTime % 60;
          document.getElementById('timeRemaining').textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
        }
      }, 1000);
    }
  
    function showQuestion(index) {
      hideAllQuestions();
      document.getElementById(`question-${index}`).classList.add('active');
    }
  
    function hideAllQuestions() {
      document.querySelectorAll('.question-block').forEach(question => question.classList.remove('active'));
    }
  
    var solution = {};  // Initialize the solution object

function saveAndNext(index) {
  const question = document.getElementById(`question-${index}`);
  const dataValue = question.dataset.value;
  const questiontype = document.getElementById(`questiontype-${index}`);
  let selectedOption;

  if (questiontype.dataset.value === "numerical") {
    const option = document.querySelector(`input[name="answers[${index}]"]`);
    selectedOption = option ? option.value : null;
  } else {
    const option = document.querySelector(`input[name="answers[${index}]"]:checked`);
    selectedOption = option ? option.value : null;
  }

  const sidebarButton = document.getElementById(`sidebar-button-${index}`);

  if (selectedOption) {
    // Update solution and mark question as answered
    solution[dataValue] = selectedOption;
    attemptedCount++;
    notAttemptedCount--;
    sidebarButton.classList.remove('skipped');
    sidebarButton.classList.add('answered');
  } else {
    // Mark question as skipped and move to next
    solution[dataValue] = "-1";
    if (!sidebarButton.classList.contains('skipped')) {
      skippedCount++;
      notAttemptedCount--;
    }
    sidebarButton.classList.remove('answered');
    sidebarButton.classList.add('skipped');
  }

  // Update counters
  updateCounters();

  // Navigate to the next question or loop back to the first
  if (index + 1 < <%= test.questions.length %>) {
    showQuestion(index + 1);
  } else {
    showQuestion(0);  // Loop back to the first question
  }
}


  
    function skipQuestion(index) {
      const sidebarButton = document.getElementById(`sidebar-button-${index}`);
      if (!sidebarButton.classList.contains('skipped')) {
        skippedCount++;
        notAttemptedCount--;
      }
      sidebarButton.classList.remove('answered');
      sidebarButton.classList.add('skipped');
      updateCounters();
  
      if (index + 1 < <%= test.questions.length %>) {
        showQuestion(index + 1);
      } else {
        showQuestion(0);
      }
    }
  
    function clearSelection(index) {
      document.querySelectorAll(`input[name="answers[${index}]"]`).forEach(radio => (radio.checked = false));
      const sidebarButton = document.getElementById(`sidebar-button-${index}`);
      if (sidebarButton.classList.contains('answered')) {
        attemptedCount--;
        notAttemptedCount++;
      } else if (sidebarButton.classList.contains('skipped')) {
        skippedCount--;
        notAttemptedCount++;
      }
      sidebarButton.classList.remove('answered');
      sidebarButton.classList.remove('skipped');
      updateCounters();
    }
  
    function submitTest() {
      const unansweredQuestions = <%= test.questions.length %> - attemptedCount - skippedCount;
      var form = document.getElementById('testForm');
  

  for (var key in solution) {
    if (solution.hasOwnProperty(key)) {
      var hiddenField = document.createElement("input");
      hiddenField.type = "hidden";
      hiddenField.name = "solution[" + key + "]"; // This will send solution data as an array
      hiddenField.value = solution[key];

      // Append the hidden field to the form
      form.appendChild(hiddenField);
    }
  }
    form.submit();   
    }
  
    document.getElementById("clickToStart").addEventListener("click", function() {
      enterFullscreen();
      startTimer();
      document.getElementById("clickToStartDiv").style.display = "none";
      document.getElementById("testContent").style.display = "block";
      document.getElementById("side").style.display = "block";
    });


    function toggleSidebar() {
    const sidebar = document.getElementById("side");
    sidebar.classList.toggle("open"); // Toggle the open class
}

function closeSidebar() {
    const sidebar = document.getElementById("side");
    sidebar.classList.remove("open"); // Remove the open class
}

    function enterFullscreen() {
      const elem = document.documentElement;
      if (elem.requestFullscreen) elem.requestFullscreen();
      else if (elem.mozRequestFullScreen) elem.mozRequestFullScreen();
      else if (elem.webkitRequestFullscreen) elem.webkitRequestFullscreen();
      else if (elem.msRequestFullscreen) elem.msRequestFullscreen();
    }
  
    document.addEventListener("fullscreenchange", function() {
      if (!document.fullscreenElement) {
        document.getElementById('testForm').submit();
      }
    });

    // JavaScript to toggle radio button selection when clicking on the option div
document.querySelectorAll('.radio-option').forEach(function(option) {
  option.addEventListener('click', function() {
    const radioInput = this.previousElementSibling; // Get the corresponding radio input
    radioInput.checked = true; // Check the radio input when the option div is clicked
    // Update the appearance of other options
    document.querySelectorAll('.radio-input input[type="radio"]').forEach(function(input) {
      const optionDiv = input.nextElementSibling; // Get the associated option div
      if (input !== radioInput) {
        optionDiv.style.backgroundColor = ''; // Reset the background color for unselected options
        optionDiv.style.borderColor = '#ccc'; // Reset border color
      }
    });
    // Change the selected option style
    this.style.backgroundColor = '#f0f8ff';
    this.style.borderColor = '#007bff';
  });
});

  
    showQuestion(0);
  </script>
  
     
</body>
</html>
